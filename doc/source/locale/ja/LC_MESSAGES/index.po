# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, Matthew Treinish
# This file is distributed under the same license as the stestr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# Masayuki Igawa <masayuki@igawa.io>, 2019. #zanata
msgid ""
msgstr ""
"Project-Id-Version: stestr trunk\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-07 16:59+0900\n"
"PO-Revision-Date: 2019-08-07 04:26+0000\n"
"Last-Translator: Masayuki Igawa <masayuki@igawa.io>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0\n"
"X-Generator: Zanata 4.6.2\n"

#: ../index.rst:7
msgid "stestr"
msgstr ""

#: ../index.rst:9
msgid "Contents:"
msgstr ""

#: ../index.rst:23
msgid "Indices and tables"
msgstr ""

#: ../index.rst:25
msgid ":ref:`genindex`"
msgstr ""

#, fuzzy
#~ msgid "Contributing"
#~ msgstr "コントリビューション方法"

#~ msgid ""
#~ "To browse the latest code, see: https://github.com/mtreinish/stestr To "
#~ "clone the latest code, use: ``git clone https://github.com/mtreinish/"
#~ "stestr.git``"
#~ msgstr ""
#~ "最新コードの参照: https://github.com/mtreinish/stestr最新コードのクロー"
#~ "ン: ``git clone https://github.com/mtreinish/stestr.git``"

#~ msgid ""
#~ "Guidelines for contribution are documented at: http://stestr.readthedocs."
#~ "io/en/latest/developer_guidelines.html"
#~ msgstr ""
#~ "コントリビューションのガイドラインドキュメント: http://stestr.readthedocs."
#~ "io/en/latest/developer_guidelines.html"

#~ msgid ""
#~ "Use `github pull requests`_ to submit patches. Before you submit a pull "
#~ "request ensure that all the automated testing will pass by running "
#~ "``tox`` locally. This will run the test suite and also the automated "
#~ "style rule checks just as they will in CI. If CI fails on your change it "
#~ "will not be able to merge."
#~ msgstr ""
#~ "パッチを出すためには、`github pull requests`_ を使用してください。プルリク"
#~ "エストを出す前には、手元の環境で ``tox`` を実行して、すべての自動テストが"
#~ "パスすることを確認してください。これは、CI環境で実行されるものと同様のテス"
#~ "トスイートならびに、自動スタイルチェックを実行します。もし、あなたの変更に"
#~ "より、CI が fail となった場合、その変更はマージすることができません。"

#~ msgid "Overview"
#~ msgstr "概要"

#~ msgid ""
#~ "You can see the full rendered docs at: http://stestr.readthedocs.io/en/"
#~ "latest/"
#~ msgstr ""
#~ "フルレンダリングされたドキュメントはこちら:http://stestr.readthedocs.io/"
#~ "en/latest/"

#~ msgid ""
#~ "The code of the project is on Github: https://github.com/mtreinish/stestr"
#~ msgstr ""
#~ "プロジェクトのコードは GitHub にあります: https://github.com/mtreinish/"
#~ "stestr"

#~ msgid ""
#~ "stestr v2.x.x release series will be the last series that supports Python "
#~ "2. Support for Python 2.7 will be dropped in stestr release 3.0.0 which "
#~ "is being planned for early 2020."
#~ msgstr ""
#~ "stestr v2.x.x リリースシリーズは、Python 2 をサポートする最後のシリーズと"
#~ "なります。Python 2.7のサポートは、2020年の早い時期に予定されている、"
#~ "「stestr リリース 3.0.0」にて打ち切られる予定です"

#~ msgid ""
#~ "stestr is parallel Python test runner designed to execute `unittest`_ "
#~ "test suites using multiple processes to split up execution of a test "
#~ "suite. It also will store a history of all test runs to help in debugging "
#~ "failures and optimizing the scheduler to improve speed. To accomplish "
#~ "this goal it uses the `subunit`_ protocol to facilitate streaming and "
#~ "storing results from multiple workers."
#~ msgstr ""
#~ "stestr は、パラレル Python テスト実行プログラムであり、一つのテストスイー"
#~ "トを、分割実行するために、複数プロセスを使い、 `unittest`_ テストスイート"
#~ "を実行するようデザインされています。また、実行失敗のデバッグや実行速度改善"
#~ "に向けたスケジューラ最適化のために、すべてのテスト実行履歴を保存していま"
#~ "す。この目標達成のため stestrでは、 `subunit`_ プロトコルを使用し、スト"
#~ "リーミングや複数ワーカーからの結果を保存することを容易にしています。"

#~ msgid ""
#~ "stestr originally started as a fork of the `testrepository`_ project. "
#~ "But, instead of being an interface for any test runner that used subunit, "
#~ "like testrepository, stestr concentrated on being a dedicated test runner "
#~ "for python projects. While stestr was originally forked from "
#~ "testrepository it is not backwards compatible with testrepository. At a "
#~ "high level the basic concepts of operation are shared between the two "
#~ "projects but the actual usage is not exactly the same."
#~ msgstr ""
#~ "stestr は、元々 `testrepository`_ プロジェクトのフォークとして始まりまし"
#~ "た。しかし、subunit を使用する testrepository のようなあらゆるテストラン"
#~ "ナーインターフェースとなる代わりに、stestr は、python プロジェクトに特化・"
#~ "集中したテストランナーです。stestr は、元々 testrepository からフォークし"
#~ "ましたが、testrepository との後方互換性はありません。高いレベルでの基本的"
#~ "な実行コンセプトは、それら2つのプロジェクトの間で共有されているものの、実"
#~ "際の使用法は、完全に同一というわけでありません。"

#~ msgid "Installing stestr"
#~ msgstr "stestr のインストール"

#~ msgid "stestr is available via pypi, so all you need to do is run::"
#~ msgstr ""
#~ "stestr は、pypi 経由で利用可能です。そのため、以下を実行するだけで::"

#~ msgid ""
#~ "to get stestr on your system. If you need to use a development version of "
#~ "stestr you can clone the repo and install it locally with::"
#~ msgstr ""
#~ "あなたのシステムに、stestr を取得することができます。もし、開発バージョン"
#~ "のstestr を使う必要があれば、リポジトリをクローンし、ローカルにインストー"
#~ "ルすることができます::"

#~ msgid ""
#~ "which will install stestr in your python environment in editable mode for "
#~ "local development"
#~ msgstr ""
#~ "この操作で、stestr をあなたの python 環境のローカル開発環境に対し、編集可"
#~ "能モードでインストールできます。"

#~ msgid "Using stestr"
#~ msgstr "stestr の利用"

#~ msgid ""
#~ "After you install stestr to use it to run tests is pretty "
#~ "straightforward. The first thing you'll want to do is create a ``.stestr."
#~ "conf`` file for your project. This file is used to tell stestr where to "
#~ "find tests and basic information about how tests are run. A basic minimal "
#~ "example of the contents of this is::"
#~ msgstr ""
#~ "stestr のインストール後、テスト実行のために使う方法は、とても簡単です。ま"
#~ "ずはじめに、``.stestr.conf`` ファイルをあなたのプロジェクトのために作成し"
#~ "ます。このファイルは、「どこにテストがあるのか」「どうやってテストを実行す"
#~ "るのか」という基本的な情報を stestr に伝えます。基本最小限の設定例としては"
#~ "次のようなものとなります::"

#~ msgid ""
#~ "which just tells stestr the relative path for the directory to use for "
#~ "test discovery. This is the same as ``--start-directory`` in the standard "
#~ "`unittest discovery`_."
#~ msgstr ""
#~ "この記述は、テスト探索のために使われるディレクトリの相対パスを、stestr に"
#~ "伝えます。これは、標準的な `unittest discovery`_ の ``--start-directory`` "
#~ "と同様です。"

#~ msgid ""
#~ "After this file is created you should be all set to start using stestr to "
#~ "run tests. To run tests just use::"
#~ msgstr ""
#~ "このファイルを作成すれば、stestr を使い始めるためにやるべきことはすべて完"
#~ "了です。テストを実行するためには、単に次のように使うだけです::"

#~ msgid ""
#~ "it will first create a results repository at ``.stestr/`` in the current "
#~ "working directory and then execute all the tests found by test discovery. "
#~ "If you're just running a single test (or module) and want to avoid the "
#~ "overhead of doing test discovery you can use the ``--no-discover``/``-n`` "
#~ "option to specify that test."
#~ msgstr ""
#~ "これにより、まず、結果を保持するためのリポジトリが、カレントワーキングディ"
#~ "レクトリの ``.stestr/`` に作成され、テスト探索により見つかったテストがすべ"
#~ "て実行されます。もし、あなたが、単にひとつのテスト（あるいはモジュール）を"
#~ "実行し、テスト探索によるオーバーヘッドを避けたいのであれば、``--no-"
#~ "discover``もしくは ``-n`` オプションをそのテストに対して指定し、実行するこ"
#~ "とにより可能です。"

#~ msgid ""
#~ "For all the details on these commands and more thorough explanation of "
#~ "options see the stestr manual: https://stestr.readthedocs.io/en/latest/"
#~ "MANUAL.html"
#~ msgstr ""
#~ "これらのコマンドの詳細は、さらなるオプションの説明は、stestr マニュアルを"
#~ "参照してください: https://stestr.readthedocs.io/en/latest/MANUAL.html"

#~ msgid "Migrating from testrepository"
#~ msgstr "testrepository からの移行"

#~ msgid ""
#~ "If you have a project that is already using testrepository stestr's "
#~ "source repo contains a helper script for migrating your repo to use "
#~ "stestr. This script just creates a ``.stestr.conf`` file from a ``.testr."
#~ "conf`` file. (assuming it uses a standard subunit.run test command "
#~ "format) To run this from your project repo just call::"
#~ msgstr ""
#~ "もし、testrepository を既に使用しているプロジェクトを持っているのであれ"
#~ "ば、stestr のソースリポジトリには、あなたのリポジトリを stestr を利用する"
#~ "ように移行するための、ヘルパースクリプトがあります。このスクリプトは、単"
#~ "に、``.testr.conf`` ファイルから、 ``.stestr.conf`` ファイルを作成します。"
#~ "（標準的な subunit.run テストコマンド形式を利用していることを想定していま"
#~ "す）これを実行するためには、あなたのプロジェクトリポジトリで、以下を実行し"
#~ "ます::"

#~ msgid "and you'll have a ``.stestr.conf`` created."
#~ msgstr "これにより、 ``.stestr.conf`` が作成されます。"

#~ msgid "Building a manpage"
#~ msgstr "manpage の生成"

#~ msgid ""
#~ "The stestr manual has been formatted so that it renders well as html and "
#~ "as a manpage. The html output and is autogenerated and published to: "
#~ "https://stestr.readthedocs.io/en/latest/MANUAL.html but the manpage has "
#~ "to be generated by hand. To do this you have to manually run sphinx-build "
#~ "with the manpage builder. This has been automated in a small script that "
#~ "should be run from the root of the stestr repository::"
#~ msgstr ""
#~ "stestr マニュアルは、htmlと同様に、manpage としてもレンダリングするために"
#~ "整形されています。html 出力物と自動生成され公開されているものはこちらです:"
#~ "https://stestr.readthedocs.io/en/latest/MANUAL.html しかしながら、その "
#~ "manpageは、手動で生成する必要があります。このためには、手動で sphinx-"
#~ "build コマンドをmanpage builder とともに実行する必要があります。これは、簡"
#~ "単なスクリプトで自動化されており、 stestr リポジトリのルートディレクトリで"
#~ "以下を実行します::"

#~ msgid ""
#~ "which will generate the troff file in doc/build/man/stestr.1 which is "
#~ "ready to be packaged and or put in your system's man pages."
#~ msgstr ""
#~ "これにより、troff ファイルが doc/build/man/stestr.1 に作成され、それは、"
#~ "パッケージ可能で、あなたのシステムの man page としても配置可能です。"

#~ msgid "Community"
#~ msgstr "コミュニティ"

#~ msgid "Besides Github interactions there is also a stestr IRC channel:"
#~ msgstr "GitHub でのやり取りに加え、stestr の IRC チャネルもあります:"

#~ msgid "#stestr on Freenode"
#~ msgstr "Freenode の #stestr チャネル"

#~ msgid "feel free to join to ask questions, or just discuss stestr."
#~ msgstr ""
#~ "stestr に関する質問、もしくは議論をしていますので、気軽に参加してくださ"
#~ "い。"
