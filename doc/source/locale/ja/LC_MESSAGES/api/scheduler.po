# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, Matthew Treinish
# This file is distributed under the same license as the stestr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: stestr trunk\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-05 11:58+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/api/scheduler.rst:4
msgid "The Scheduler Module"
msgstr ""

#: ../../source/api/scheduler.rst:6
msgid ""
"This module is used to deal with anything related to test "
"scheduling/partitioning in stestr."
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:1
msgid "Parse a worker yaml file and generate test groups"
msgstr ""

#: of stestr.scheduler.generate_worker_partitions
#: stestr.scheduler.partition_tests
msgid "Parameters"
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:3
msgid "A list of test ids too be partitioned"
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:4
msgid "The path to a worker file"
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:5
msgid ""
"A repository object that will be used for looking up timing data. This is"
" optional, and also will only be used for scheduling if there is a count "
"field on a worker."
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:8
msgid ""
"A callback function that is used as a scheduler hint to group test_ids "
"together and treat them as a single unit for scheduling. This function "
"expects a single test_id parameter and it will return a group identifier."
" Tests_ids that have the same group identifier will be kept on the same "
"worker. This is optional and also will only be used for scheduling if "
"there is a count field on a worker."
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:15
msgid ""
"If true each partition's test order will be randomized. This is optional "
"and also will only be used for scheduling if there is a count field on a "
"worker."
msgstr ""

#: of stestr.scheduler.generate_worker_partitions
#: stestr.scheduler.local_concurrency stestr.scheduler.partition_tests
msgid "Returns"
msgstr ""

#: of stestr.scheduler.generate_worker_partitions:19
msgid "A list where each element is a distinct subset of test_ids."
msgstr ""

#: of stestr.scheduler.local_concurrency:1
msgid "Get the number of available CPUs on the system."
msgstr ""

#: of stestr.scheduler.local_concurrency:3
msgid "An int for the number of cpus. Or None if it couldn't be found"
msgstr ""

#: of stestr.scheduler.partition_tests:1
msgid "Partition test_ids by concurrency."
msgstr ""

#: of stestr.scheduler.partition_tests:3
msgid ""
"Test durations from the repository are used to get partitions which have "
"roughly the same expected runtime. New tests - those with no recorded "
"duration - are allocated in round-robin fashion to the partitions created"
" using test durations."
msgstr ""

#: of stestr.scheduler.partition_tests:8
msgid "The list of test_ids to be partitioned"
msgstr ""

#: of stestr.scheduler.partition_tests:9
msgid ""
"The concurrency that will be used for running the tests. This is the "
"number of partitions that test_ids will be split into."
msgstr ""

#: of stestr.scheduler.partition_tests:12
msgid "A repository object that"
msgstr ""

#: of stestr.scheduler.partition_tests:13
msgid ""
"A callback function that is used as a scheduler hint to group test_ids "
"together and treat them as a single unit for scheduling. This function "
"expects a single test_id parameter and it will return a group identifier."
" Tests_ids that have the same group identifier will be kept on the same "
"worker."
msgstr ""

#: of stestr.scheduler.partition_tests:18
msgid "If true each partition's test order will be randomized"
msgstr ""

#: of stestr.scheduler.partition_tests:21
msgid ""
"A list where each element is a distinct subset of test_ids, and the union"
" of all the elements is equal to set(test_ids)."
msgstr ""

