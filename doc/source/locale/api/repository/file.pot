# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, Matthew Treinish
# This file is distributed under the same license as the stestr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: stestr trunk\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-07 16:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../api/repository/file.rst:4
msgid "File Repository Type"
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file:1
msgid "Persistent storage of test results."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository:1
msgid "Disk based storage of test results."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository:3
msgid "This repository stores each stream it receives as a file in a directory. Indices are then built on top of this basic store."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository:6
msgid "This particular disk layout is subject to change at any time, as its primarily a bootstrapping exercise at this point. Any changes made are likely to have an automatic upgrade process."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.count:1
msgid "Return the number of test runs this repository has stored."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.count:0
msgid "return count"
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.count:3
msgid "The count of test runs stored in the repository."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.find_metadata:1
msgid "Return the list of run_ids for a given metadata string."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.find_metadata:0
msgid "param"
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.find_metadata:3
msgid "metadata: the metadata string to search for."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.find_metadata:0
#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_failing:0
#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_test_run:0
msgid "Returns"
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.find_metadata:4
msgid "a list of any test_ids that have that metadata value."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_failing:1
msgid "Get a TestRun that contains all of and only current failing tests."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_failing:3
msgid "a TestRun."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_test_run:1
msgid "Retrieve a TestRun object for run_id."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_test_run:0
msgid "Parameters"
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_test_run:3
msgid "The test run id to retrieve."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.get_test_run:4
msgid "A TestRun object."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.Repository.latest_id:1
msgid "Return the run id for the most recently inserted test run."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.RepositoryFactory.initialise:1
msgid "Create a repository at url/path."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.RepositoryFactory.open:1
msgid "Open the repository at url."
msgstr ""

#: ../../../stestr/repository/file.py:docstring of stestr.repository.file.RepositoryFactory.open:3
msgid "Raise RepositoryNotFound if there is no repository at the given url."
msgstr ""

